---
- name: update configuration files
  hosts: localhost
  gather_facts: no
  become: true

  tasks:
    - name: updating configuration selinux config
      copy:
        dest: "/etc/selinux/config"
        content: |
          SELINUX=permissive
          SELINUX=disabled

    # - name: adding bastion proxy 
    #   shell: |
    #     echo 'proxy=http://172.31.21.180:3128/' >> /etc/yum.conf

    # - name: adding proxy 
    #   shell: |
    #     echo '172.31.21.180 bastion.twidpay.com' >> /etc/hosts
          
    - name: partition mount script
      copy:
        dest: "/tmp/mount.sh"
        content: |
          #!/bin/bash

          # Get the root mount device
          root_dev=$(readlink -f /dev/mapper/$(lsblk -no NAME,MOUNTPOINT | grep ' /$' | awk '{print $1}'))
          
          # Get the backing disk of the root volume
          root_disk=$(lsblk -no pkname "$root_dev")
          
          # List all nvme disks
          all_disks=($(lsblk -d -n -o NAME | grep nvme))
          
          # Select the other disk
          disk_to_format=""
          for dev in "${all_disks[@]}"; do
              if [[ "$dev" != "$root_disk" ]]; then
                  disk_to_format="/dev/$dev"
                  break
              fi
          done
          
          if [[ -z "$disk_to_format" ]]; then
              echo "No available disk to format"
              exit 1
          fi
          
          echo "Formatting disk: $disk_to_format"
          mkfs.xfs -f "$disk_to_format"
          
          # Wait for device to settle
          udevadm settle
          sleep 2
          
          uuid=$(blkid -o value -s UUID "$disk_to_format")
          
          if [[ -z "$uuid" ]]; then
              echo "ERROR: UUID not found for $disk_to_format"
              exit 1
          fi
          
          mkdir -p /twid
          mount "$disk_to_format" /twid
          
          echo "UUID=$uuid  /twid  xfs  defaults,nofail 0 2" >> /etc/fstab
    
    - name: update /etc/fstab
      shell: |
        sudo chmod +x /tmp/mount.sh
        sudo bash /tmp/mount.sh
        sudo rm -f /tmp/mount.sh
        
    - name: Create swap
      shell: |
        dd if=/dev/zero of=/swapfile1 bs=1M count=512 && \
        chmod 600 /swapfile1 && \
        mkswap /swapfile1 && \
        swapon /swapfile1 && \
        echo '/swapfile1 swap swap defaults 0 0' | sudo tee -a /etc/fstab

    # - name: system transfer script
    #   copy:
    #     dest: "/root/scripts/system_transfer_from_git.sh"
    #     content: |

    # - name: system transfer unit test script
    #   copy:
    #     dest: "/root/scripts/system_unit_test_transfer_from_git.sh"
    #     content: |          


    # - name: system get env from secrets script
    #   copy:
    #     dest: "/root/scripts/system_get_env_from_secrets.sh"
    #     content: | 

    # - name: api transfer script
    #   copy:
    #     dest: "/root/scripts/"
    #     content: |


    # - name: api transfer unit test script
    #   copy:
    #     dest: "/root/scripts/"
    #     content: |   


    # - name: api get env from secrets script
    #   copy:
    #     dest: "/root/scripts/"
    #     content: | 


    # - name: tasks transfer script
    #   copy:
    #     dest: "/root/scripts/"
    #     content: |
    

    # - name: tasks transfer unit test script
    #   copy:
    #     dest: "/root/scripts/"
    #     content: |   


    # - name: tasks get env from secrets script
    #   copy:
    #     dest: "/root/scripts/"
    #     content: | 


    # - name: merchant transfer script
    #   copy:
    #     dest: "/root/scripts/"
    #     content: |


    # - name: merchant transfer unit test script
    #   copy:
    #     dest: "/root/scripts/"
    #     content: |   


    # - name: merchant get env from secrets script
    #   copy:
    #     dest: "/root/scripts/"
    #     content: | 


    # - name: mapi transfer script
    #   copy:
    #     dest: "/root/scripts/"
    #     content: |

    
    # - name: mapi transfer unit test script
    #   copy:
    #     dest: "/root/scripts/"
    #     content: |   


    # # - name: mapi get env from secrets script
    # #   copy:
    # #     dest: "/root/scripts/"
    # #     content: | 

    # - name: tpap transfer script
    #   copy:
    #     dest: "/root/scripts/"
    #     content: |

    
    # - name: tpap transfer unit test script
    #   copy:
    #     dest: "/root/scripts/"
    #     content: |   

    # # - name: tpap get env from secrets script
    # #   copy:
    # #     dest: "/root/scripts/"
    # #     content: | 
