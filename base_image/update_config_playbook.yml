---
- name: update configuration files
  hosts: localhost
  gather_facts: no
  become: true

  tasks:
    - name: updating configuration selinux config
      copy:
        dest: "/etc/selinux/config"
        content: |
          SELINUX=permissive
          SELINUX=disabled

    - name: partition mount script
      copy:
        dest: "/tmp/mount.sh"
        content: |
          #!/bin/bash
          #!/bin/bash

          # Get the root disk (e.g., /dev/nvme0n1 or /dev/nvme1n1)
          root_disk=$(df / | tail -1 | awk '{print $1}')
          
          echo "Root disk: $root_disk"
          
          # Define the disks we want to check (we will match the base disk name)
          disk_to_format=""
          
          # Check if the root disk is on /dev/nvme0n1* or /dev/nvme1n1*
          if [[ $root_disk == /dev/nvme0n1* ]]; then
              # If root is on /dev/nvme0n1*, we will format /dev/nvme1n1
              disk_to_format="/dev/nvme1n1"
          elif [[ $root_disk == /dev/nvme1n1* ]]; then
              # If root is on /dev/nvme1n1*, we will format /dev/nvme0n1
              disk_to_format="/dev/nvme0n1"
          else
              echo "Root disk is neither on /dev/nvme0n1* nor /dev/nvme1n1* - exiting."
              exit 1
          fi
          
          echo "Disk to format: $disk_to_format"

          echo "Formatting disk: $disk_to_format"
          sudo mkfs.xfs $disk_to_format
          sudo mkdir -p /twid
          sudo mount $disk_to_format /twid
          uuid=$(sudo blkid -o value -s UUID $disk_to_format)
          echo "UUID=$uuid  /twid  xfs  defaults,nofail 0 2" | sudo tee -a /etc/fstab 
    
    - name: update /etc/fstab
      shell: |
        sudo chmod +x /tmp/mount.sh
        sudo bash /tmp/mount.sh
        sudo rm -f /tmp/mount.sh
        
#          UUID=74c6e75b-add1-4b5c-ac07-dc6d3d9065be / xfs defaults,noatime 1  1
#          UUID=9a8e4002-5e2d-4ca4-ae93-65411762c09b /twid xfs defaults,nofail 0 2
#          fs-0d128686506baa805:/   /data   efs     defaults,_netdev      0       0

    - name: Create swap
      shell: |
        dd if=/dev/zero of=/swapfile1 bs=1M count=512 && \
        chmod 600 /swapfile1 && \
        mkswap /swapfile1 && \
        swapon /swapfile1 && \
        echo '/swapfile1 swap swap defaults 0 0' | sudo tee -a /etc/fstab
        sudo mkdir /data
        echo 'fs-0d128686506baa805:/ /data efs defaults,_netdev 0 0' | sudo tee -a /etc/fstab

    - name: updating codedeploy config
      copy:
        dest: "/etc/codedeploy-agent/conf/codedeployagent.yml"
        content: |
          ---
          :log_aws_wire: false
          :log_dir: '/var/log/aws/codedeploy-agent/'
          :pid_dir: '/opt/codedeploy-agent/state/.pid/'
          :program_name: codedeploy-agent
          :root_dir: '/opt/codedeploy-agent/deployment-root'
          :verbose: false
          :wait_between_runs: 1
          :proxy_uri: 'http://172.31.21.180:3128/'
          :max_revisions: 5

    - name: Create directory
      shell: |
        sudo mkdir /twid/log
        sudo mkdir /etc/nginx/snippets

    - name: updating configuration nginx.conf
      copy:
        dest: "/etc/nginx/nginx.conf"
        content: |
          user nginx;
          worker_processes auto;
          error_log /var/log/nginx/error.log;
          pid /run/nginx.pid;

          include /usr/share/nginx/modules/*.conf;

          events
          {
            worker_connections 1024;
          }

          http
          {
            log_format main '$remote_addr - $remote_user [$time_local] "$request" '
            '$status $body_bytes_sent "$http_referer" '
            '"$http_user_agent" "$http_x_forwarded_for"';

            access_log /var/log/nginx/access.log main;

            sendfile on;
            tcp_nopush on;
            tcp_nodelay on;
            client_header_timeout 60m;
            client_body_timeout 60m;
            client_header_buffer_size 2k;
            client_body_buffer_size 256k;
            client_max_body_size 256m;
            large_client_header_buffers 4 8k;
            send_timeout 600;
            keepalive_timeout 600;
            keepalive_requests 100000;
            reset_timedout_connection on;
            server_name_in_redirect off;
            server_names_hash_max_size 512;
            server_names_hash_bucket_size 512;
            types_hash_max_size 4096;

            include /etc/nginx/mime.types;
            default_type application/octet-stream;

            include /etc/nginx/conf.d/*.conf;

            server
            {
              listen 80;
              listen [::]:80;
              server_name _;
              root /usr/share/nginx/html;

              include /etc/nginx/default.d/*.conf;

              location /
              {
              }

              error_page 404 /404.html;
              location = /404.html
              {
              }

              error_page 500 502 503 504 /50x.html;
              location = /50x.html
              {
              }
            }

            server
            {
              listen 81;
              server_name localhost;
              root /usr/share/nginx/html;

              location /nginx_status
              {
                stub_status;
              }
              location /
              {
              }

              error_page 404 /404.html;
              location = /404.html
              {
              }

              error_page 500 502 503 504 /50x.html;
              location = /50x.html
              {
              }
            }
            # server
            # {
            #   listen 8081;
            #   server_name localhost;

            #   location /status
            #   {
            #     fastcgi_param SCRIPT_FILENAME /status;
            #     include fastcgi_params;
            #   }

            #   error_page 404 /404.html;
            #   location = /404.html
            #   {
            #   }

            #   error_page 500 502 503 504 /50x.html;
            #   location = /50x.html
            #   {
            #   }
            # }
          }
    
    - name: updating configuration conf.d/a.conf
      copy:
        dest: "/etc/nginx/conf.d/a.conf"
        content: |
          server {
            listen 80 default_server;
            server_name a.tasks.twidpay.com;
            include /etc/nginx/snippets/headers.conf;

            root /var/www/html/healthcheck;
            index index.php index.html index.htm;

            location / {
              try_files $uri $uri/ /index.php?$args;
            }

            location ~ \.php$ {
              try_files $uri =404;
              fastcgi_pass unix:/run/php-fpm/www.sock;
              fastcgi_index index.php;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              include fastcgi_params;
            }

          }

    - name: updating configuration conf.d/security.conf
      copy:
        dest: "/etc/nginx/conf.d/security.conf"
        content: |
          server_tokens off;
          #add_header X-Frame-Options SAMEORIGIN;
          add_header X-Frame-Options DENY;
          add_header X-XSS-Protection "1; mode=block";
          #add_header X-Content-Type-Options nosniff;
          add_header Content-Security-Policy "default-src 'self' *.google.com *.amazon.com;";
          add_header Set-Cookie "Path=/; HttpOnly; Secure";
          add_header Referrer-Policy 'origin';

    - name: updating configuration conf.d/system.conf
      copy:
        dest: "/etc/nginx/conf.d/system.conf"
        content: |
          server {
            listen 80;
            server_name system.twidpay.com www.system.twidpay.com system.local.twidpay.com;
            include /etc/nginx/snippets/headers.conf;

            root /twid/system/public;
            access_log /twid/log/twid_system_access.log;
            error_log /twid/log/twid_system_error.log warn;
            index index.php index.html index.htm;

            proxy_read_timeout 1800s;
            proxy_connect_timeout 1800s;
            proxy_send_timeout 1800s;
            fastcgi_connect_timeout 1800s;
            fastcgi_read_timeout 1800s;
            fastcgi_send_timeout 1800s;
            fastcgi_keep_conn on;

            location / {
              try_files $uri $uri/ /index.php?$args;
            }

            location ~ \.php$ {
              try_files $uri =404;
              fastcgi_pass unix:/run/php-fpm/www.sock;
              fastcgi_index index.php;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              include fastcgi_params;
              # Hide PHP headers
              fastcgi_hide_header             X-Powered-By;
              fastcgi_hide_header             X-CF-Powered-By;
            }

            location /status {
              stub_status;
              allow 127.0.0.1;        #only allow requests from localhost
              deny all;               #deny all other hosts
            }

            location ~ /\. {
              deny  all;
            }
          }

    - name: updating configuration conf.d/tasks.conf
      copy:
        dest: "/etc/nginx/conf.d/tasks.conf"
        content: |
          server {
            listen 80;
            server_name tasks.twidpay.com www.tasks.twidpay.com tasks.local.twidpay.com;
            include /etc/nginx/snippets/headers.conf;

            root /twid/tasks/public;
            access_log /twid/log/twid_tasks_access.log;
            error_log /twid/log/twid_tasks_error.log crit;
            index index.php index.html index.htm;

            proxy_read_timeout 1800s;
            proxy_connect_timeout 1800s;
            proxy_send_timeout 1800s;
            fastcgi_connect_timeout 1800s;
            fastcgi_read_timeout 1800s;
            fastcgi_send_timeout 1800s;
            fastcgi_keep_conn on;

            location / {
              try_files $uri $uri/ /index.php?$args;
            }

            location ~ \.php$ {
              try_files $uri =404;
              fastcgi_pass unix:/run/php-fpm/www.sock;
              fastcgi_index index.php;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              include fastcgi_params;

            # Hide PHP headers
              fastcgi_hide_header             X-Powered-By;
              fastcgi_hide_header             X-CF-Powered-By;
            }

            location /status {
              stub_status;
              allow 127.0.0.1;        #only allow requests from localhost
              deny all;               #deny all other hosts
            }

            location ~ /\. {
              deny  all;
            }
          }

    - name: updating configuration snippets/headers.conf
      copy:
        dest: "/etc/nginx/snippets/headers.conf"
        content: |
          location ^~ /.well-known/acme-challenge/ {
            allow all;
            root /var/lib/letsencrypt/;
            default_type "text/plain";
            try_files $uri =404;
          }
          add_header X-Content-Type-Options nosniff;
          add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload";

    - name: updating configuration php.ini
      copy:
        dest: "/etc/php.ini"
        content: |
          [PHP]
          engine = On
          short_open_tag = Off
          precision = 14
          output_buffering = 4096
          zlib.output_compression = Off
          implicit_flush = Off
          unserialize_callback_func =
          serialize_precision = -1
          disable_functions =
          disable_classes =
          zend.enable_gc = On
          expose_php = On
          max_execution_time = 3600
          max_input_time = 1800
          memory_limit = 2048M
          error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT
          display_errors = Off
          display_startup_errors = Off
          log_errors = On
          log_errors_max_len = 1024
          ignore_repeated_errors = Off
          ignore_repeated_source = Off
          report_memleaks = On
          html_errors = On
          variables_order = "GPCS"
          request_order = "GP"
          register_argc_argv = Off
          auto_globals_jit = On
          post_max_size = 10240M
          auto_prepend_file =
          auto_append_file =
          default_mimetype = "text/html"
          default_charset = "UTF-8"
          doc_root =
          user_dir =
          enable_dl = Off
          file_uploads = On
          upload_max_filesize = 2400M
          max_file_uploads = 20
          allow_url_fopen = On
          allow_url_include = Off
          default_socket_timeout = 3600
          extension=apcu.so
          apc.enabled=1
          apc.enable_cli=1
          extension=redis.so


          [CLI Server]
          cli_server.color = On

          [Date]

          [filter]

          [iconv]

          [intl]

          [sqlite3]

          [Pcre]
          pcre.jit=0

          [Pdo]

          [Pdo_mysql]
          pdo_mysql.cache_size = 2000
          pdo_mysql.default_socket=

          [Phar]

          [mail function]
          sendmail_path = /usr/sbin/sendmail -t -i
          mail.add_x_header = On

          [ODBC]
          odbc.allow_persistent = On
          odbc.check_persistent = On
          odbc.max_persistent = -1
          odbc.max_links = -1
          odbc.defaultlrl = 4096
          odbc.defaultbinmode = 1

          [Interbase]
          ibase.allow_persistent = 1
          ibase.max_persistent = -1
          ibase.max_links = -1
          ibase.timestampformat = "%Y-%m-%d %H:%M:%S"
          ibase.dateformat = "%Y-%m-%d"
          ibase.timeformat = "%H:%M:%S"

          [MySQLi]
          mysqli.max_persistent = -1
          mysqli.allow_persistent = On
          mysqli.max_links = -1
          mysqli.cache_size = 2000
          mysqli.default_port = 3306
          mysqli.default_socket =
          mysqli.default_host =
          mysqli.default_user =
          mysqli.default_pw =
          mysqli.reconnect = Off

          [mysqlnd]
          mysqlnd.collect_statistics = On
          mysqlnd.collect_memory_statistics = Off

          [PostgreSQL]
          pgsql.allow_persistent = On
          pgsql.auto_reset_persistent = Off
          pgsql.max_persistent = -1
          pgsql.max_links = -1
          pgsql.ignore_notice = 0
          pgsql.log_notice = 0

          [bcmath]
          bcmath.scale = 0

          [browscap]

          [Session]
          session.save_handler = files
          session.use_strict_mode = 0
          session.use_cookies = 1
          session.use_only_cookies = 1
          session.name = PHPSESSID
          session.auto_start = 0
          session.cookie_lifetime = 0
          session.cookie_path = /
          session.cookie_domain =
          session.cookie_httponly =
          session.serialize_handler = php
          session.gc_probability = 1
          session.gc_divisor = 1000
          session.gc_maxlifetime = 7200
          session.referer_check =
          session.cache_limiter = nocache
          session.cache_expire = 180
          session.use_trans_sid = 0
          session.sid_length = 26
          session.trans_sid_tags = "a=href,area=href,frame=src,form="
          session.sid_bits_per_character = 5

          [Assertion]
          zend.assertions = -1

          [mbstring]

          [gd]

          [exif]

          [Tidy]
          tidy.clean_output = Off

          [soap]
          soap.wsdl_cache_enabled=1
          soap.wsdl_cache_dir="/tmp"
          soap.wsdl_cache_ttl=86400
          soap.wsdl_cache_limit = 5

          [sysvshm]

          [ldap]
          ldap.max_links = -1

          [dba]

          [curl]

          [openssl]

    - name: updating configuration php-fpm config
      copy:
        dest: "/etc/php-fpm.d/www.conf"
        content: |
          [www]

          user = apache
          group = apache
          listen = /run/php-fpm/www.sock
          listen.acl_users = apache,nginx
          listen.allowed_clients = 127.0.0.1
          listen.mode = 0666
          pm = dynamic
          pm.max_children = 250
          pm.start_servers = 50
          pm.min_spare_servers = 50
          pm.max_spare_servers = 150
          pm.max_requests = 500
          pm.status_path = /status
          slowlog = /var/log/php-fpm/www-slow.log
          request_terminate_timeout = 1800
          clear_env = yes
          php_admin_value[error_log] = /var/log/php-fpm/www-error.log
          php_admin_flag[log_errors] = on
          php_value[session.save_handler] = files
          php_value[session.save_path]    = /var/lib/php/session
          php_value[soap.wsdl_cache_dir]  = /var/lib/php/wsdlcache

    - name: updating configuration filebeat.yml
      copy:
        dest: "/etc/filebeat/filebeat.yml"
        content: |
          filebeat.inputs:
          - type: filestream

            id: my-filestream-id

            enabled: true

            paths:
              - /twid/system/storage/logs/exception_log
              - /twid/system/storage/logs/access_log
              - /twid/system/storage/logs/error_log
              - /opt/codedeploy-agent/deployment-root/deployment-logs/*
              - /twid/system/storage/logs/inbound.log
              - /twid/system/storage/logs/outbound.log
              - /twid/system/storage/logs/alert.log
              - /twid/system/storage/logs/error.log
              - /twid/system/storage/logs/critical.log
              - /twid/system/storage/logs/info.log
            ignore_inactive: since_last_start

          filebeat.config.modules:
            path: ${path.config}/modules.d/*.yml

            reload.enabled: false

          setup.template.settings:
            index.number_of_shards: 1

          setup.kibana:

          output.logstash:
            hosts: ["10.210.41.164:5044"]

          processors:
            - add_host_metadata:
                when.not.contains.tags: forwarded
            - add_cloud_metadata: ~
            - add_docker_metadata: ~
            - add_kubernetes_metadata: ~
        
    - name: Restart NGINX to apply configuration
      systemd:
        name: nginx
        state: reloaded

    - name: Restart Filebeat to apply configuration
      systemd:
        name: filebeat
        state: restarted
